<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ninesale.valinor.auth.provider.dao.PermissionMapper">

    <sql id="Base_Column_List">
        `id`, `permissionName`, `permissionSign`, `href`, `description`
    </sql>

    <select id="selectByPrimaryKey" resultType="com.ninesale.valinor.auth.provider.model.Permission" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List" />
        from t_auth_permission
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from t_auth_permission
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.ninesale.valinor.auth.provider.model.Permission">
        insert into t_auth_permission (id, permissionName, permissionSign,
        description)
        values (#{id,jdbcType=BIGINT}, #{permissionName,jdbcType=VARCHAR},
        #{permissionSign,jdbcType=VARCHAR},
        #{description,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.ninesale.valinor.auth.provider.model.Permission">
        insert into t_auth_permission
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="permissionName != null">
                permissionName,
            </if>
            <if test="permissionSign != null">
                permissionSign,
            </if>
            <if test="description != null">
                description,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="permissionName != null">
                #{permissionName,jdbcType=VARCHAR},
            </if>
            <if test="permissionSign != null">
                #{permissionSign,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>


    <update id="updateByPrimaryKeySelective" parameterType="com.ninesale.valinor.auth.provider.model.Permission">
        update t_auth_permission
        <set>
            <if test="permissionName != null">
                permissionName = #{permissionName,jdbcType=VARCHAR},
            </if>
            <if test="permissionSign != null">
                permissionSign = #{permissionSign,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ninesale.valinor.auth.provider.model.Permission">
        update t_auth_permission
        set permissionName = #{permissionName,jdbcType=VARCHAR},
        permissionSign = #{permissionSign,jdbcType=VARCHAR},
        description =
        #{description,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <!-- 通过角色id 查询角色 拥有的权限 -->
    <select id="getPermissionsByRoleId" parameterType="java.lang.Long" resultType="com.ninesale.valinor.auth.api.model.Permission">
        SELECT p.* 
        FROM t_auth_permission p 
        LEFT JOIN t_auth_role_permission rp 
        ON rp.permissionId = p.id
        WHERE 
        rp.roleId = #{roleId,jdbcType=BIGINT}
    </select>
    
    
    
</mapper>