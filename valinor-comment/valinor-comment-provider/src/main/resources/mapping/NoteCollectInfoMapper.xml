<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ninesale.valinor.comment.provider.dao.NoteCollectInfoMapper">
	<resultMap id="BaseResultMap" type="com.ninesale.valinor.comment.provider.model.DtoNoteCollectInfo">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="userId" property="userId" jdbcType="BIGINT" />
		<result column="noteId" property="noteId" jdbcType="BIGINT" />
		<result column="albumId" property="albumId" jdbcType="BIGINT" />
		<result column="validFlag" property="validFlag" jdbcType="INTEGER" />
		<result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
		<result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, userId, noteId, albumId, validFlag, createTime, updateTime
	</sql>

	<select id="selectBySelective" resultMap="BaseResultMap" parameterType="com.ninesale.valinor.comment.provider.model.DtoNoteCollectInfo">
		select
		<include refid="Base_Column_List" />
		from t_note_collect
		<where>
			<if test="id != null">
				id = #{id}
			</if>
			<if test="albumId != null">
				and albumId = #{albumId}
			</if>
			<if test="userId != null">
				and userId = #{userId}
			</if>			
			and validFlag = 0
		</where>
		order by createTime desc
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from t_note_collect
		where id = #{id,jdbcType=BIGINT}
	</select>
	
	<update id="updateValidFlag" parameterType="com.ninesale.valinor.comment.provider.model.DtoNoteCollectInfo">
	    update t_note_collect set validFlag = 1
		<where>
			<if test="id != null">
				id = #{id}
			</if>
			<if test="noteId != null">
				and noteId = #{noteId}
			</if>
			and validFlag = 0
		</where>	 
	</update>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from t_note_collect
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<insert id="insert" parameterType="com.ninesale.valinor.comment.provider.model.DtoNoteCollectInfo">
		insert into t_note_collect (id, userId, noteId,
		validFlag, createTime, updateTime
		)
		values (#{id,jdbcType=BIGINT},
		#{userId,jdbcType=BIGINT}, #{noteId,jdbcType=BIGINT},
		#{validFlag,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.ninesale.valinor.comment.provider.model.DtoNoteCollectInfo">
		insert into t_note_collect
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				userId,
			</if>
			<if test="noteId != null">
				noteId,
			</if>
			<if test="albumId != null">
				albumId,
			</if>
			<if test="validFlag != null">
				validFlag,
			</if>
			<if test="createTime != null">
				createTime,
			</if>
			<if test="updateTime != null">
				updateTime,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=BIGINT},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="noteId != null">
				#{noteId,jdbcType=BIGINT},
			</if>
			<if test="albumId != null">
				#{albumId,jdbcType=BIGINT},
			</if>
			<if test="validFlag != null">
				#{validFlag,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.ninesale.valinor.comment.provider.model.DtoNoteCollectInfo">
		update t_note_collect
		<set>
			<if test="userId != null">
				userId = #{userId,jdbcType=BIGINT},
			</if>
			<if test="noteId != null">
				noteId = #{noteId,jdbcType=BIGINT},
			</if>
			<if test="validFlag != null">
				validFlag = #{validFlag,jdbcType=INTEGER},
			</if>
			<if test="createTime != null">
				createTime = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				updateTime = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ninesale.valinor.comment.provider.model.DtoNoteCollectInfo">
		update t_note_collect
		set userId = #{userId,jdbcType=BIGINT},
		noteId = #{noteId,jdbcType=BIGINT},
		validFlag =
		#{validFlag,jdbcType=INTEGER},
		createTime = #{createTime,jdbcType=TIMESTAMP},
		updateTime = #{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>