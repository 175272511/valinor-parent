<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ninesale.valinor.comment.provider.dao.NoteStatisticsInfoMapper" >
  <resultMap id="BaseResultMap" type="com.ninesale.valinor.comment.provider.model.DtoNoteStatisticsInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="noteId" property="noteId" jdbcType="BIGINT" />
    <result column="shareNum" property="shareNum" jdbcType="INTEGER" />
    <result column="praiseNum" property="praiseNum" jdbcType="INTEGER" />
    <result column="collectNum" property="collectNum" jdbcType="INTEGER" />
    <result column="commentNum" property="commentNum" jdbcType="INTEGER" />
    <result column="viewNum" property="viewNum" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, noteId, shareNum, praiseNum, collectNum, commentNum, viewNum, createTime, updateTime
  </sql>
  
  <select id="selectBySelective" resultMap="BaseResultMap" parameterType="com.ninesale.valinor.comment.provider.model.DtoNoteStatisticsInfo" >
    select 
    <include refid="Base_Column_List" />
    from t_note_statistics_info
	<where>
		<if test="id != null">
			id = #{id}
		</if>
		<if test="noteId != null">
			AND noteId = #{noteId} 
		</if>
	</where>	
	order by createTime desc
  </select>
  
  <select id="selectByNoteIdList" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_note_statistics_info
	where noteId in
	<foreach collection="list" item="item" index="index" open="(" separator="," close=")">
		#{item}
	</foreach>
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_note_statistics_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_note_statistics_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  
  <update id="updateCommentInfo" parameterType="com.ninesale.valinor.comment.provider.model.DtoNoteStatisticsInfo">
    update t_note_statistics_info
    <set >
      <if test="shareNum != null" >
        shareNum = shareNum+1,
      </if>
      <if test="praiseNum != null" >
        praiseNum = praiseNum+1,
      </if>
      <if test="collectNum != null" >
        collectNum = collectNum+1,
      </if>
      <if test="commentNum != null" >
        commentNum = commentNum+1,
      </if>
      <if test="viewNum != null" >
        viewNum = viewNum+1,
      </if>      
    </set>
    where noteId = #{noteId,jdbcType=BIGINT}
  </update>
  
  <insert id="insert" parameterType="com.ninesale.valinor.comment.provider.model.DtoNoteStatisticsInfo" >
    insert into t_note_statistics_info (id, noteId, shareNum, 
      praiseNum, collectNum, commentNum, 
      createTime, updateTime)
    values (#{id,jdbcType=BIGINT}, #{noteId,jdbcType=BIGINT}, #{shareNum,jdbcType=INTEGER}, 
      #{praiseNum,jdbcType=INTEGER}, #{collectNum,jdbcType=INTEGER}, #{commentNum,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ninesale.valinor.comment.provider.model.DtoNoteStatisticsInfo" >
    insert into t_note_statistics_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="noteId != null" >
        noteId,
      </if>
      <if test="shareNum != null" >
        shareNum,
      </if>
      <if test="praiseNum != null" >
        praiseNum,
      </if>
      <if test="collectNum != null" >
        collectNum,
      </if>
      <if test="commentNum != null" >
        commentNum,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="noteId != null" >
        #{noteId,jdbcType=BIGINT},
      </if>
      <if test="shareNum != null" >
        #{shareNum,jdbcType=INTEGER},
      </if>
      <if test="praiseNum != null" >
        #{praiseNum,jdbcType=INTEGER},
      </if>
      <if test="collectNum != null" >
        #{collectNum,jdbcType=INTEGER},
      </if>
      <if test="commentNum != null" >
        #{commentNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ninesale.valinor.comment.provider.model.DtoNoteStatisticsInfo" >
    update t_note_statistics_info
    <set >
      <if test="noteId != null" >
        noteId = #{noteId,jdbcType=BIGINT},
      </if>
      <if test="shareNum != null" >
        shareNum = #{shareNum,jdbcType=INTEGER},
      </if>
      <if test="praiseNum != null" >
        praiseNum = #{praiseNum,jdbcType=INTEGER},
      </if>
      <if test="collectNum != null" >
        collectNum = #{collectNum,jdbcType=INTEGER},
      </if>
      <if test="commentNum != null" >
        commentNum = #{commentNum,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ninesale.valinor.comment.provider.model.DtoNoteStatisticsInfo" >
    update t_note_statistics_info
    set noteId = #{noteId,jdbcType=BIGINT},
      shareNum = #{shareNum,jdbcType=INTEGER},
      praiseNum = #{praiseNum,jdbcType=INTEGER},
      collectNum = #{collectNum,jdbcType=INTEGER},
      commentNum = #{commentNum,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>