<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ninesale.valinor.order.provider.dao.OrderMainMapper" >
  <resultMap id="BaseResultMap" type="com.ninesale.valinor.order.provider.model.DtoOrderMain" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="orderNo" property="orderNo" jdbcType="VARCHAR" />
    <result column="parentOrderId" property="parentOrderId" jdbcType="BIGINT" />
    <result column="parentOrderNo" property="parentOrderNo" jdbcType="VARCHAR" />
    <result column="orderType" property="orderType" jdbcType="INTEGER" />
    <result column="currency" property="currency" jdbcType="VARCHAR" />
    <result column="totalFee" property="totalFee" jdbcType="INTEGER" />
    <result column="payPoints" property="payPoints" jdbcType="INTEGER" />
    <result column="PointsDeductFee" property="pointsDeductFee" jdbcType="INTEGER" />
    <result column="salesNo" property="salesNo" jdbcType="BIGINT" />
    <result column="saleDeductFee" property="saleDeductFee" jdbcType="INTEGER" />
    <result column="couponNo" property="couponNo" jdbcType="VARCHAR" />
    <result column="couponDeductFee" property="couponDeductFee" jdbcType="INTEGER" />
    <result column="transFee" property="transFee" jdbcType="INTEGER" />
    <result column="payFee" property="payFee" jdbcType="INTEGER" />
    <result column="payWay" property="payWay" jdbcType="INTEGER" />
    <result column="payType" property="payType" jdbcType="INTEGER" />
    <result column="userId" property="userId" jdbcType="BIGINT" />
    <result column="receiver" property="receiver" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="receiptInfo" property="receiptInfo" jdbcType="VARCHAR" />
    <result column="validFlag" property="validFlag" jdbcType="INTEGER" />
    <result column="payNo" property="payNo" jdbcType="VARCHAR" />
    <result column="payOrderNo" property="payOrderNo" jdbcType="VARCHAR" />
    <result column="payTime" property="payTime" jdbcType="TIMESTAMP" />
    <result column="cancelTime" property="cancelTime" jdbcType="TIMESTAMP" />
    <result column="expireTime" property="expireTime" jdbcType="TIMESTAMP" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updateTime" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, orderNo, parentOrderId, parentOrderNo, orderType, currency, totalFee, payPoints, 
    PointsDeductFee, salesNo, saleDeductFee, couponNo, couponDeductFee, transFee, payFee, 
    payWay, payType, userId, receiver, address, phone, status, receiptInfo, validFlag, 
    payNo, payOrderNo, payTime, cancelTime, expireTime, createTime, updateTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_order_main
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_order_main
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ninesale.valinor.order.provider.model.DtoOrderMain" >
    insert into t_order_main (id, orderNo, parentOrderId, 
      parentOrderNo, orderType, currency, 
      totalFee, payPoints, PointsDeductFee, 
      salesNo, saleDeductFee, couponNo, 
      couponDeductFee, transFee, payFee, 
      payWay, payType, userId, 
      receiver, address, phone, 
      status, receiptInfo, validFlag, 
      payNo, payOrderNo, payTime, 
      cancelTime, expireTime, createTime, 
      updateTime)
    values (#{id,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{parentOrderId,jdbcType=BIGINT}, 
      #{parentOrderNo,jdbcType=VARCHAR}, #{orderType,jdbcType=INTEGER}, #{currency,jdbcType=VARCHAR}, 
      #{totalFee,jdbcType=INTEGER}, #{payPoints,jdbcType=INTEGER}, #{pointsDeductFee,jdbcType=INTEGER}, 
      #{salesNo,jdbcType=BIGINT}, #{saleDeductFee,jdbcType=INTEGER}, #{couponNo,jdbcType=VARCHAR}, 
      #{couponDeductFee,jdbcType=INTEGER}, #{transFee,jdbcType=INTEGER}, #{payFee,jdbcType=INTEGER}, 
      #{payWay,jdbcType=INTEGER}, #{payType,jdbcType=INTEGER}, #{userId,jdbcType=BIGINT}, 
      #{receiver,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{receiptInfo,jdbcType=VARCHAR}, #{validFlag,jdbcType=INTEGER}, 
      #{payNo,jdbcType=VARCHAR}, #{payOrderNo,jdbcType=VARCHAR}, #{payTime,jdbcType=TIMESTAMP}, 
      #{cancelTime,jdbcType=TIMESTAMP}, #{expireTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ninesale.valinor.order.provider.model.DtoOrderMain" >
    insert into t_order_main
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderNo != null" >
        orderNo,
      </if>
      <if test="parentOrderId != null" >
        parentOrderId,
      </if>
      <if test="parentOrderNo != null" >
        parentOrderNo,
      </if>
      <if test="orderType != null" >
        orderType,
      </if>
      <if test="currency != null" >
        currency,
      </if>
      <if test="totalFee != null" >
        totalFee,
      </if>
      <if test="payPoints != null" >
        payPoints,
      </if>
      <if test="pointsDeductFee != null" >
        PointsDeductFee,
      </if>
      <if test="salesNo != null" >
        salesNo,
      </if>
      <if test="saleDeductFee != null" >
        saleDeductFee,
      </if>
      <if test="couponNo != null" >
        couponNo,
      </if>
      <if test="couponDeductFee != null" >
        couponDeductFee,
      </if>
      <if test="transFee != null" >
        transFee,
      </if>
      <if test="payFee != null" >
        payFee,
      </if>
      <if test="payWay != null" >
        payWay,
      </if>
      <if test="payType != null" >
        payType,
      </if>
      <if test="userId != null" >
        userId,
      </if>
      <if test="receiver != null" >
        receiver,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="receiptInfo != null" >
        receiptInfo,
      </if>
      <if test="validFlag != null" >
        validFlag,
      </if>
      <if test="payNo != null" >
        payNo,
      </if>
      <if test="payOrderNo != null" >
        payOrderNo,
      </if>
      <if test="payTime != null" >
        payTime,
      </if>
      <if test="cancelTime != null" >
        cancelTime,
      </if>
      <if test="expireTime != null" >
        expireTime,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
      <if test="updateTime != null" >
        updateTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="parentOrderId != null" >
        #{parentOrderId,jdbcType=BIGINT},
      </if>
      <if test="parentOrderNo != null" >
        #{parentOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="currency != null" >
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null" >
        #{totalFee,jdbcType=INTEGER},
      </if>
      <if test="payPoints != null" >
        #{payPoints,jdbcType=INTEGER},
      </if>
      <if test="pointsDeductFee != null" >
        #{pointsDeductFee,jdbcType=INTEGER},
      </if>
      <if test="salesNo != null" >
        #{salesNo,jdbcType=BIGINT},
      </if>
      <if test="saleDeductFee != null" >
        #{saleDeductFee,jdbcType=INTEGER},
      </if>
      <if test="couponNo != null" >
        #{couponNo,jdbcType=VARCHAR},
      </if>
      <if test="couponDeductFee != null" >
        #{couponDeductFee,jdbcType=INTEGER},
      </if>
      <if test="transFee != null" >
        #{transFee,jdbcType=INTEGER},
      </if>
      <if test="payFee != null" >
        #{payFee,jdbcType=INTEGER},
      </if>
      <if test="payWay != null" >
        #{payWay,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="receiver != null" >
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="receiptInfo != null" >
        #{receiptInfo,jdbcType=VARCHAR},
      </if>
      <if test="validFlag != null" >
        #{validFlag,jdbcType=INTEGER},
      </if>
      <if test="payNo != null" >
        #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="payOrderNo != null" >
        #{payOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelTime != null" >
        #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null" >
        #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ninesale.valinor.order.provider.model.DtoOrderMain" >
    update t_order_main
    <set >
      <if test="orderNo != null" >
        orderNo = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="parentOrderId != null" >
        parentOrderId = #{parentOrderId,jdbcType=BIGINT},
      </if>
      <if test="parentOrderNo != null" >
        parentOrderNo = #{parentOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        orderType = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="currency != null" >
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null" >
        totalFee = #{totalFee,jdbcType=INTEGER},
      </if>
      <if test="payPoints != null" >
        payPoints = #{payPoints,jdbcType=INTEGER},
      </if>
      <if test="pointsDeductFee != null" >
        PointsDeductFee = #{pointsDeductFee,jdbcType=INTEGER},
      </if>
      <if test="salesNo != null" >
        salesNo = #{salesNo,jdbcType=BIGINT},
      </if>
      <if test="saleDeductFee != null" >
        saleDeductFee = #{saleDeductFee,jdbcType=INTEGER},
      </if>
      <if test="couponNo != null" >
        couponNo = #{couponNo,jdbcType=VARCHAR},
      </if>
      <if test="couponDeductFee != null" >
        couponDeductFee = #{couponDeductFee,jdbcType=INTEGER},
      </if>
      <if test="transFee != null" >
        transFee = #{transFee,jdbcType=INTEGER},
      </if>
      <if test="payFee != null" >
        payFee = #{payFee,jdbcType=INTEGER},
      </if>
      <if test="payWay != null" >
        payWay = #{payWay,jdbcType=INTEGER},
      </if>
      <if test="payType != null" >
        payType = #{payType,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        userId = #{userId,jdbcType=BIGINT},
      </if>
      <if test="receiver != null" >
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="receiptInfo != null" >
        receiptInfo = #{receiptInfo,jdbcType=VARCHAR},
      </if>
      <if test="validFlag != null" >
        validFlag = #{validFlag,jdbcType=INTEGER},
      </if>
      <if test="payNo != null" >
        payNo = #{payNo,jdbcType=VARCHAR},
      </if>
      <if test="payOrderNo != null" >
        payOrderNo = #{payOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null" >
        payTime = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="cancelTime != null" >
        cancelTime = #{cancelTime,jdbcType=TIMESTAMP},
      </if>
      <if test="expireTime != null" >
        expireTime = #{expireTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        updateTime = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ninesale.valinor.order.provider.model.DtoOrderMain" >
    update t_order_main
    set orderNo = #{orderNo,jdbcType=VARCHAR},
      parentOrderId = #{parentOrderId,jdbcType=BIGINT},
      parentOrderNo = #{parentOrderNo,jdbcType=VARCHAR},
      orderType = #{orderType,jdbcType=INTEGER},
      currency = #{currency,jdbcType=VARCHAR},
      totalFee = #{totalFee,jdbcType=INTEGER},
      payPoints = #{payPoints,jdbcType=INTEGER},
      PointsDeductFee = #{pointsDeductFee,jdbcType=INTEGER},
      salesNo = #{salesNo,jdbcType=BIGINT},
      saleDeductFee = #{saleDeductFee,jdbcType=INTEGER},
      couponNo = #{couponNo,jdbcType=VARCHAR},
      couponDeductFee = #{couponDeductFee,jdbcType=INTEGER},
      transFee = #{transFee,jdbcType=INTEGER},
      payFee = #{payFee,jdbcType=INTEGER},
      payWay = #{payWay,jdbcType=INTEGER},
      payType = #{payType,jdbcType=INTEGER},
      userId = #{userId,jdbcType=BIGINT},
      receiver = #{receiver,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      receiptInfo = #{receiptInfo,jdbcType=VARCHAR},
      validFlag = #{validFlag,jdbcType=INTEGER},
      payNo = #{payNo,jdbcType=VARCHAR},
      payOrderNo = #{payOrderNo,jdbcType=VARCHAR},
      payTime = #{payTime,jdbcType=TIMESTAMP},
      cancelTime = #{cancelTime,jdbcType=TIMESTAMP},
      expireTime = #{expireTime,jdbcType=TIMESTAMP},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      updateTime = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>