<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ninesale.valinor.order.provider.dao.OrderDetlLogMapper" >
  <resultMap id="BaseResultMap" type="com.ninesale.valinor.order.provider.model.DtoOrderDetlLog" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="orderDetlId" property="orderDetlId" jdbcType="BIGINT" />
    <result column="orderId" property="orderId" jdbcType="BIGINT" />
    <result column="skuId" property="skuId" jdbcType="BIGINT" />
    <result column="skuSnapId" property="skuSnapId" jdbcType="BIGINT" />
    <result column="skuNum" property="skuNum" jdbcType="INTEGER" />
    <result column="currency" property="currency" jdbcType="VARCHAR" />
    <result column="totalFee" property="totalFee" jdbcType="INTEGER" />
    <result column="payPoints" property="payPoints" jdbcType="INTEGER" />
    <result column="salesNo" property="salesNo" jdbcType="VARCHAR" />
    <result column="saleDeductFee" property="saleDeductFee" jdbcType="INTEGER" />
    <result column="couponId" property="couponId" jdbcType="INTEGER" />
    <result column="couponDeductFee" property="couponDeductFee" jdbcType="INTEGER" />
    <result column="payFee" property="payFee" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, orderDetlId, orderId, skuId, skuSnapId, skuNum, currency, totalFee, payPoints, 
    salesNo, saleDeductFee, couponId, couponDeductFee, payFee, status, createTime
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_order_detl_log
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_order_detl_log
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ninesale.valinor.order.provider.model.DtoOrderDetlLog" >
    insert into t_order_detl_log (id, orderDetlId, orderId, 
      skuId, skuSnapId, skuNum, 
      currency, totalFee, payPoints, 
      salesNo, saleDeductFee, couponId, 
      couponDeductFee, payFee, status, 
      createTime)
    values (#{id,jdbcType=BIGINT}, #{orderDetlId,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, 
      #{skuId,jdbcType=BIGINT}, #{skuSnapId,jdbcType=BIGINT}, #{skuNum,jdbcType=INTEGER}, 
      #{currency,jdbcType=VARCHAR}, #{totalFee,jdbcType=INTEGER}, #{payPoints,jdbcType=INTEGER}, 
      #{salesNo,jdbcType=VARCHAR}, #{saleDeductFee,jdbcType=INTEGER}, #{couponId,jdbcType=INTEGER}, 
      #{couponDeductFee,jdbcType=INTEGER}, #{payFee,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.ninesale.valinor.order.provider.model.DtoOrderDetlLog" >
    insert into t_order_detl_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderDetlId != null" >
        orderDetlId,
      </if>
      <if test="orderId != null" >
        orderId,
      </if>
      <if test="skuId != null" >
        skuId,
      </if>
      <if test="skuSnapId != null" >
        skuSnapId,
      </if>
      <if test="skuNum != null" >
        skuNum,
      </if>
      <if test="currency != null" >
        currency,
      </if>
      <if test="totalFee != null" >
        totalFee,
      </if>
      <if test="payPoints != null" >
        payPoints,
      </if>
      <if test="salesNo != null" >
        salesNo,
      </if>
      <if test="saleDeductFee != null" >
        saleDeductFee,
      </if>
      <if test="couponId != null" >
        couponId,
      </if>
      <if test="couponDeductFee != null" >
        couponDeductFee,
      </if>
      <if test="payFee != null" >
        payFee,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderDetlId != null" >
        #{orderDetlId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="skuId != null" >
        #{skuId,jdbcType=BIGINT},
      </if>
      <if test="skuSnapId != null" >
        #{skuSnapId,jdbcType=BIGINT},
      </if>
      <if test="skuNum != null" >
        #{skuNum,jdbcType=INTEGER},
      </if>
      <if test="currency != null" >
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null" >
        #{totalFee,jdbcType=INTEGER},
      </if>
      <if test="payPoints != null" >
        #{payPoints,jdbcType=INTEGER},
      </if>
      <if test="salesNo != null" >
        #{salesNo,jdbcType=VARCHAR},
      </if>
      <if test="saleDeductFee != null" >
        #{saleDeductFee,jdbcType=INTEGER},
      </if>
      <if test="couponId != null" >
        #{couponId,jdbcType=INTEGER},
      </if>
      <if test="couponDeductFee != null" >
        #{couponDeductFee,jdbcType=INTEGER},
      </if>
      <if test="payFee != null" >
        #{payFee,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ninesale.valinor.order.provider.model.DtoOrderDetlLog" >
    update t_order_detl_log
    <set >
      <if test="orderDetlId != null" >
        orderDetlId = #{orderDetlId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null" >
        orderId = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="skuId != null" >
        skuId = #{skuId,jdbcType=BIGINT},
      </if>
      <if test="skuSnapId != null" >
        skuSnapId = #{skuSnapId,jdbcType=BIGINT},
      </if>
      <if test="skuNum != null" >
        skuNum = #{skuNum,jdbcType=INTEGER},
      </if>
      <if test="currency != null" >
        currency = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="totalFee != null" >
        totalFee = #{totalFee,jdbcType=INTEGER},
      </if>
      <if test="payPoints != null" >
        payPoints = #{payPoints,jdbcType=INTEGER},
      </if>
      <if test="salesNo != null" >
        salesNo = #{salesNo,jdbcType=VARCHAR},
      </if>
      <if test="saleDeductFee != null" >
        saleDeductFee = #{saleDeductFee,jdbcType=INTEGER},
      </if>
      <if test="couponId != null" >
        couponId = #{couponId,jdbcType=INTEGER},
      </if>
      <if test="couponDeductFee != null" >
        couponDeductFee = #{couponDeductFee,jdbcType=INTEGER},
      </if>
      <if test="payFee != null" >
        payFee = #{payFee,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ninesale.valinor.order.provider.model.DtoOrderDetlLog" >
    update t_order_detl_log
    set orderDetlId = #{orderDetlId,jdbcType=BIGINT},
      orderId = #{orderId,jdbcType=BIGINT},
      skuId = #{skuId,jdbcType=BIGINT},
      skuSnapId = #{skuSnapId,jdbcType=BIGINT},
      skuNum = #{skuNum,jdbcType=INTEGER},
      currency = #{currency,jdbcType=VARCHAR},
      totalFee = #{totalFee,jdbcType=INTEGER},
      payPoints = #{payPoints,jdbcType=INTEGER},
      salesNo = #{salesNo,jdbcType=VARCHAR},
      saleDeductFee = #{saleDeductFee,jdbcType=INTEGER},
      couponId = #{couponId,jdbcType=INTEGER},
      couponDeductFee = #{couponDeductFee,jdbcType=INTEGER},
      payFee = #{payFee,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>